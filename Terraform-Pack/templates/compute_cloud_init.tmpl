#cloud-config

package_update: true
package_upgrade: true
package_reboot_if_required: true

fqdn: ${hostname}
write_files:
  - content: |
      user www-data;
      worker_processes auto;
      pid /run/nginx.pid;
      include /etc/nginx/modules-enabled/*.conf;
      events {
          worker_connections 768;
      }
      http {
          sendfile on;
          tcp_nopush on;
          types_hash_max_size 2048;
          client_max_body_size 10M;  
          include /etc/nginx/mime.types;
          default_type application/octet-stream;
          ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
          ssl_prefer_server_ciphers on;
          access_log /var/log/nginx/access.log;
          error_log /var/log/nginx/error.log;
          gzip on;
          include /etc/nginx/conf.d/*.conf;
          include /etc/nginx/sites-enabled/*;
      }
    path: /etc/nginx/nginx.conf
    owner: root:root
    permissions: '0644'
    
  - content: |
      server {
        listen 80;
        listen [::]:80;
        server_name ${fqdn};
        return 403;
      }
      server {
        listen 443 ssl;
        server_name ${fqdn};
        ssl_certificate /etc/letsencrypt/live/${fqdn}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${fqdn}/privkey.pem;
        ssl_protocols TLSv1.3;
        root /var/www/html;
        index index.html index.htm;
    
        location / {
          if $http_${custom_header_lower} != "${custom_secret}" {
              return 403;
          }
          proxy_pass https://localhost:${teamserver};
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header ${custom_header} $http_${custom_header_lower};
          proxy_set_header X-Forwarded-Proto $scheme;
          }
      }
    path: /root/nginx-default
    owner: root:root
    permissions: '0644'    

packages:
    - ca-certificates
    - curl
    - git
    - magic-wormhole
    - net-tools
    - nginx
    - openjdk-11-jdk
    - proxychains
    - python3
    - python3-pip
    - python3-virtualenv
    - snapd
    - tmux
    - vim
    - wget
    - zip

runcmd:
  - snap install certbot --classic
  - certbot certonly -d ${fqdn} --nginx --register-unsafely-without-email --agree-tos --non-interactive
  - cd /opt; git clone https://github.com/nickvourd/random_c2_profile
  - openssl pkcs12 -inkey /etc/letsencrypt/live/${fqdn}/privkey.pem -in /etc/letsencrypt/live/${fqdn}/fullchain.pem -export -out /opt/${keystore_filename}.pkcs12 -passout pass:"${keystore_password}"
  - keytool -importkeystore -srckeystore /opt/${keystore_filename}.pkcs12 -srcstoretype pkcs12 -destkeystore /opt/${keystore_filename}.store -srcstorepass "${keystore_password}" -deststorepass "${keystore_password}" -noprompt
  - install -m 0755 -d /etc/apt/keyrings
  - curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
  - chmod a+r /etc/apt/keyrings/docker.asc
  - echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
  - apt-get update; apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
  - mv /etc/nginx/sites-available/default /etc/nginx/sites-available/default2; mv /root/nginx-default /etc/nginx/sites-available/default; sudo systemctl restart nginx
 
power_state:
  mode: reboot
  delay: 1
  message: Rebooting after installation


